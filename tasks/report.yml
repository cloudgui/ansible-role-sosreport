---
- name: get the timestamp
  set_fact:
    sosreport_dir_timestamp: "{{ lookup('pipe', 'date +%m%d%Y-%H%M%S') }}"

- name: ensure the temp directory
  file:
    path: "{{ sosreport_temp_dir }}/sosreport-{{ sosreport_dir_timestamp }}"
    state: directory
  become: true

- name: generate sosreport
  shell: >
    sosreport -a \
    --name={{ sosreport_customer_name }} \
    --case-id={{ sosreport_caseid }} \
    --tmp-dir="{{ sosreport_temp_dir }}/sosreport-{{ sosreport_dir_timestamp }}" \
    --batch
  become: true
  changed_when: false

- name: find the latest generated file
  find:
    path: "{{ sosreport_temp_dir }}/sosreport-{{ sosreport_dir_timestamp }}"
    patterns: "sosreport-{{ sosreport_customer_name }}.{{ sosreport_caseid }}-*.tar.xz"
  register: reg_sosreport

- name: stat for the sosreport
  stat:
    path: "{{ reg_sosreport.files[0]['path'] }}"
  register: reg_stat_sosreport
  when: reg_sosreport | length > 0

- name: change file permissions
  file:
    name: "{{ reg_sosreport.files[0]['path'] }}"
    mode: 0755
  become: true
  when:
    - reg_sosreport | length > 0
    - reg_stat_sosreport.stat.exists is defined
    - reg_stat_sosreport.stat.exists

- name: ensure the destination directory
  file:
    path: "{{ sosreport_final_dest_path }}"
    state: directory
    mode: 0755
  delegate_to: localhost
  become: false
  when:
    - reg_sosreport | length > 0
    - reg_stat_sosreport.stat.exists is defined
    - reg_stat_sosreport.stat.exists

- name: stat whether the file is already copied
  stat:
    path: "{{ sosreport_final_dest_path }}/{{ reg_sosreport.files[0]['path'] }}"
  register: reg_stat_sosreport_copied
  delegate_to: localhost
  when: reg_sosreport | length > 0

- name: fetch the remote file to local
  fetch:
    src: "{{ reg_sosreport.files[0]['path'] }}"
    dest: "{{ sosreport_final_dest_path }}"
    flat: yes
  become: true
  when:
    - reg_sosreport | length > 0
    - not reg_stat_sosreport_copied.stat.exists
    - reg_stat_sosreport.stat.exists is defined
    - reg_stat_sosreport.stat.exists
